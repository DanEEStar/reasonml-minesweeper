// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Belt_MapInt = require("bs-platform/lib/js/belt_MapInt.js");

function stringOfTile(tile) {
  if (tile[/* hasBomb */1]) {
    return "X";
  } else {
    return "";
  }
}

function reactOfTile(tile) {
  return React.createElement("span", undefined, stringOfTile(tile));
}

function initTiles(numBombs) {
  var bombIndexes = Belt_Array.slice(Belt_Array.makeByAndShuffle(400, (function (i) {
              return i;
            })), 0, numBombs);
  return Belt_MapInt.fromArray(Belt_Array.mapWithIndex(Belt_Array.make(400, 0), (function (index, _value) {
                    return /* tuple */[
                            index,
                            /* record */[
                              /* state : Hidden */0,
                              /* hasBomb */Belt_Array.some(bombIndexes, (function (bombIndex) {
                                      return bombIndex === index;
                                    }))
                            ]
                          ];
                  })));
}

function defaultTile(param) {
  return /* record */[
          /* state : Hidden */0,
          /* hasBomb */false
        ];
}

function Game$Tile(Props) {
  var onClick = Props.onClick;
  var tile = Props.tile;
  return React.createElement("button", {
              className: "square",
              onClick: onClick
            }, reactOfTile(tile));
}

var Tile = /* module */[
  /* stringOfTile */stringOfTile,
  /* reactOfTile */reactOfTile,
  /* initTiles */initTiles,
  /* defaultTile */defaultTile,
  /* make */Game$Tile
];

function Game$Board(Props) {
  var onClick = Props.onClick;
  var tiles = Props.tiles;
  return Belt_Array.map(Belt_Array.makeBy(20, (function (i) {
                    return i;
                  })), (function (row) {
                return React.createElement("div", {
                            key: String(row),
                            className: "board-row"
                          }, Belt_Array.map(Belt_Array.makeBy(20, (function (i) {
                                      return i;
                                    })), (function (col) {
                                  var tileIndex = Caml_int32.imul(20, row) + col | 0;
                                  var tile = Belt_MapInt.getWithDefault(tiles, tileIndex, /* record */[
                                        /* state : Hidden */0,
                                        /* hasBomb */false
                                      ]);
                                  return React.createElement(Game$Tile, {
                                              onClick: (function (evt) {
                                                  return Curry._2(onClick, evt, tile);
                                                }),
                                              tile: tile
                                            });
                                })));
              }));
}

var Board = /* module */[/* make */Game$Board];

function handleClick(_event, tile) {
  console.log(tile);
  return /* () */0;
}

function Game(Props) {
  Props.message;
  var match = React.useReducer((function (state, action) {
          return state;
        }), /* record */[/* tiles */initTiles(100)]);
  return React.createElement("div", {
              className: "game-board"
            }, React.createElement(Game$Board, {
                  onClick: handleClick,
                  tiles: match[0][/* tiles */0]
                }));
}

var boardWidth = 20;

var boardHeight = 20;

var numBombs = 100;

var make = Game;

exports.boardWidth = boardWidth;
exports.boardHeight = boardHeight;
exports.numBombs = numBombs;
exports.Tile = Tile;
exports.Board = Board;
exports.handleClick = handleClick;
exports.make = make;
/* react Not a pure module */
